In archive libavrserial.a:

libavrserial.o:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000034  2**0
                  ALLOC
  3 .text.serial_setup_usart 00000054  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  4 .text.serial_setup_async_normal_mode 0000000e  00000000  00000000  00000088  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  5 .text.serial_setup_async_double_speed 0000000e  00000000  00000000  00000096  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  6 .text.serial_setup_sync_master 0000000e  00000000  00000000  000000a4  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  7 .debug_info   0000024c  00000000  00000000  000000b2  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
  8 .debug_abbrev 000000f7  00000000  00000000  000002fe  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    0000010a  00000000  00000000  000003f5  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
 10 .debug_aranges 00000038  00000000  00000000  000004ff  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
 11 .debug_ranges 00000028  00000000  00000000  00000537  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
 12 .debug_line   000000c2  00000000  00000000  0000055f  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
 13 .debug_str    00000256  00000000  00000000  00000621  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .comment      00000012  00000000  00000000  00000877  2**0
                  CONTENTS, READONLY
 15 .debug_frame  00000054  00000000  00000000  0000088c  2**2
                  CONTENTS, RELOC, READONLY, DEBUGGING

Disassembly of section .text.serial_setup_usart:

00000000 <serial_setup_usart>:
	 * #define BAUD 9600
	 * -> include <util/setbaud.h>
	 * UBRR0H = UBRRH_VALUE;                      
	 * UBRR0L = UBRRL_VALUE; 
	 */
	UBRR0H = UBRRH_VALUE;                       
   0:	10 92 c5 00 	sts	0x00C5, r1
	UBRR0L = UBRRL_VALUE;
   4:	2c e0       	ldi	r18, 0x0C	; 12
   6:	20 93 c4 00 	sts	0x00C4, r18

	// set needed values in 
	switch (op_mode) {
   a:	82 30       	cpi	r24, 0x02	; 2
   c:	91 05       	cpc	r25, r1
   e:	01 f0       	breq	.+0      	; 0x10 <serial_setup_usart+0x10>
  10:	03 97       	sbiw	r24, 0x03	; 3
  12:	01 f0       	breq	.+0      	; 0x14 <serial_setup_usart+0x14>
		 */

		break;
	default:
		// ASYNC_NORMAL
		UCSR0A &= ~(1 << U2X0); // disable U2Xn
  14:	80 91 c0 00 	lds	r24, 0x00C0
  18:	8d 7f       	andi	r24, 0xFD	; 253
  1a:	80 93 c0 00 	sts	0x00C0, r24

	}

	// enable or disable RX/TX 
	switch (ena_rxtx) {
  1e:	42 30       	cpi	r20, 0x02	; 2
  20:	51 05       	cpc	r21, r1
  22:	01 f0       	breq	.+0      	; 0x24 <serial_setup_usart+0x24>
  24:	43 30       	cpi	r20, 0x03	; 3
  26:	51 05       	cpc	r21, r1
  28:	01 f0       	breq	.+0      	; 0x2a <serial_setup_usart+0x2a>
  2a:	41 30       	cpi	r20, 0x01	; 1
  2c:	51 05       	cpc	r21, r1
  2e:	01 f4       	brne	.+0      	; 0x30 <serial_setup_usart+0x30>
	case ENA_ALL:
		UCSR0B = (1 << TXEN0) | (1 << RXEN0);
		break;
	case ENA_RX:
		UCSR0B = (1 << RXEN0);
  30:	80 e1       	ldi	r24, 0x10	; 16
  32:	80 93 c1 00 	sts	0x00C1, r24
		UCSR0B &= ~(1 << TXEN0);
  36:	80 91 c1 00 	lds	r24, 0x00C1
  3a:	87 7f       	andi	r24, 0xF7	; 247
  3c:	00 c0       	rjmp	.+0      	; 0x3e <serial_setup_usart+0x3e>
		break;
	case ENA_TX:
		UCSR0B = (1 << TXEN0);
  3e:	88 e0       	ldi	r24, 0x08	; 8
  40:	80 93 c1 00 	sts	0x00C1, r24
		UCSR0B &= ~(1 << RXEN0);
  44:	80 91 c1 00 	lds	r24, 0x00C1
  48:	8f 7e       	andi	r24, 0xEF	; 239
  4a:	00 c0       	rjmp	.+0      	; 0x4c <serial_setup_usart+0x4c>
		break;
	default:
		// enable TX and RX
		UCSR0B = (1 << TXEN0) | (1 << RXEN0);
  4c:	88 e1       	ldi	r24, 0x18	; 24
  4e:	80 93 c1 00 	sts	0x00C1, r24
  52:	08 95       	ret

Disassembly of section .text.serial_setup_async_normal_mode:

00000000 <serial_setup_async_normal_mode>:
 * -> setup USART0 for async mode at normal speed ... U2Xn=0
 */
void 
serial_setup_async_normal_mode(serial_frame_type_t frame_type)
{
	serial_setup_usart(ASYNC_NORMAL,
   0:	43 e0       	ldi	r20, 0x03	; 3
   2:	50 e0       	ldi	r21, 0x00	; 0
   4:	bc 01       	movw	r22, r24
   6:	81 e0       	ldi	r24, 0x01	; 1
   8:	90 e0       	ldi	r25, 0x00	; 0
   a:	0c 94 00 00 	jmp	0	; 0x0 <serial_setup_async_normal_mode>

Disassembly of section .text.serial_setup_async_double_speed:

00000000 <serial_setup_async_double_speed>:
 * contraints: enable rx and tx
 */
void 
serial_setup_async_double_speed(serial_frame_type_t frame_type)
{
	serial_setup_usart(ASYNC_DOUBLE,
   0:	43 e0       	ldi	r20, 0x03	; 3
   2:	50 e0       	ldi	r21, 0x00	; 0
   4:	bc 01       	movw	r22, r24
   6:	82 e0       	ldi	r24, 0x02	; 2
   8:	90 e0       	ldi	r25, 0x00	; 0
   a:	0c 94 00 00 	jmp	0	; 0x0 <serial_setup_async_double_speed>

Disassembly of section .text.serial_setup_sync_master:

00000000 <serial_setup_sync_master>:
 * contraints: enable rx and tx
 */
void 
serial_setup_sync_master(serial_frame_type_t frame_type)
{
       	serial_setup_usart(SYNC_MASTER,
   0:	43 e0       	ldi	r20, 0x03	; 3
   2:	50 e0       	ldi	r21, 0x00	; 0
   4:	bc 01       	movw	r22, r24
   6:	83 e0       	ldi	r24, 0x03	; 3
   8:	90 e0       	ldi	r25, 0x00	; 0
   a:	0c 94 00 00 	jmp	0	; 0x0 <serial_setup_sync_master>
